import streamlit as st
import pandas as pd
import os

st.header("üìù 360 Evaluation Form (‡∏Å‡∏£‡∏≠‡∏Å‡πÅ‡∏ö‡∏ö‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô)")
st.write("- This evaluation form is designed for 360-degree evaluation, " \
"which requires gathering opinions from managers, peers, subordinates, and even oneself " \
"to obtain a well-rounded and multi-perspective assessment for reliable results.")
st.caption("- ‡πÅ‡∏ö‡∏ö‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡∏ô‡∏µ‡πâ‡∏≠‡∏≠‡∏Å‡πÅ‡∏ö‡∏ö‡∏°‡∏≤‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô‡∏ú‡∏•‡∏£‡∏≠‡∏ö‡∏ó‡∏¥‡∏®‡πÅ‡∏ö‡∏ö 360 ‡∏≠‡∏á‡∏®‡∏≤ " \
"‡∏ã‡∏∂‡πà‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏™‡∏≠‡∏ö‡∏ñ‡∏≤‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏¥‡∏î‡πÄ‡∏´‡πá‡∏ô‡∏à‡∏≤‡∏Å‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏•‡∏£‡∏≠‡∏ö‡∏Ç‡πâ‡∏≤‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÅ‡∏ö‡∏ö‡∏Ñ‡∏£‡∏ö‡∏≠‡∏á‡∏Ñ‡πå‡∏£‡∏ß‡∏° 360 ‡∏≠‡∏á‡∏®‡∏≤" \
"‡∏ï‡∏±‡πâ‡∏á‡πÅ‡∏ï‡πà ‡∏ú‡∏π‡πâ‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö‡∏ö‡∏±‡∏ç‡∏ä‡∏≤, ‡∏ú‡∏π‡πâ‡πÉ‡∏ï‡πâ‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö‡∏ö‡∏±‡∏ç‡∏ä‡∏≤, ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‡∏£‡πà‡∏ß‡∏°‡∏á‡∏≤‡∏ô ‡∏´‡∏£‡∏∑‡∏≠‡πÅ‡∏°‡πâ‡πÅ‡∏ï‡πà‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡πÑ‡∏î‡πâ‡∏ú‡∏•‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô‡∏ó‡∏µ‡πà‡∏£‡∏≠‡∏ö‡∏î‡πâ‡∏≤‡∏ô ‡∏´‡∏•‡∏≤‡∏¢‡∏°‡∏∏‡∏°‡∏°‡∏≠‡∏á ‡∏´‡∏•‡∏≤‡∏¢‡∏ù‡πà‡∏≤‡∏¢ ‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ô‡πà‡∏≤‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏ñ‡∏∑‡∏≠‡∏°‡∏≤‡∏Å‡∏Ç‡∏∂‡πâ‡∏ô")
st.write("___")
 
# Read file 
employee_df = pd.read_csv("employee_info.csv")
criteria_config = pd.read_csv("criteria_config.csv")

# Select department 
departments = sorted(employee_df["department"].unique())
selected_department = st.selectbox("Select department / ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÅ‡∏ú‡∏ô‡∏Å", departments)

# Select employee
filtered_employees = employee_df[employee_df["department"] == selected_department]
employee_names = filtered_employees["name"].tolist()
employee_selected = st.selectbox("Select employee / ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô", employee_names)

# Retrieve employee_id and department
employee_row = filtered_employees[filtered_employees["name"] == employee_selected].iloc[0]
employee_id = employee_row["employee_id"]
department = employee_row["department"]

# Retrieve core and department criteria
core_criteria_df = criteria_config[criteria_config["department"] == "Core"]
dept_criteria_df = criteria_config[criteria_config["department"] == department]

core_criteria = core_criteria_df["criteria"].tolist()
department_criteria = dept_criteria_df["criteria"].tolist()
captions_eng = pd.concat([core_criteria_df, dept_criteria_df]).set_index("criteria")["caption_eng"].to_dict()
captions_th = pd.concat([core_criteria_df, dept_criteria_df]).set_index("criteria")["caption_th"].to_dict()

all_criteria = core_criteria + department_criteria

# Form
with st.form("evaluation_form"):

    evaluator_type = st.selectbox("Evaluator (‡∏ú‡∏π‡πâ‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô)", ["Self / ‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á", "Manager / ‡∏ú‡∏π‡πâ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£", "Peer / ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‡∏£‡πà‡∏ß‡∏°‡∏á‡∏≤‡∏ô", "Subordinate / ‡∏•‡∏π‡∏Å‡∏ô‡πâ‡∏≠‡∏á"])
    st.write("___")

    st.write("**üìã Please rate according to the criteria.**")
    st.caption("‡πÇ‡∏õ‡∏£‡∏î‡πÉ‡∏´‡πâ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏ï‡∏≤‡∏°‡πÄ‡∏Å‡∏ì‡∏ë‡πå")

    scores = {}
    for crit in all_criteria:
        if crit in captions_eng:
            st.write(f">**{crit}**")

        st.caption(captions_th[crit])
        score = st.slider(captions_eng[crit], min_value=1, max_value=5, value=3)
        scores[crit] = score

    submitted = st.form_submit_button("‚úÖ Submit / ‡∏™‡πà‡∏á‡πÅ‡∏ö‡∏ö‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô")

# Record the data
if submitted:
    new_data = pd.DataFrame([{
        "employee_id": employee_id,
        "evaluator_type": evaluator_type,
        "criteria": crit,
        "score": score
    } for crit, score in scores.items()])

    if os.path.exists("evaluation_data.csv"):
        old_data = pd.read_csv("evaluation_data.csv")
        updated_data = pd.concat([old_data, new_data], ignore_index=True)
    else:
        updated_data = new_data

    updated_data.to_csv("evaluation_data.csv", index=False)
    st.success("‚úÖ Data saved successfully!")
    st.success("‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß")
